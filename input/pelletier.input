-- ========================================================================
-- Seventy-Five Problems for Testing Automatic Theorem Provers
-- FRANCIS JEFFRY PELLETIER
-- Journal of Automated Reasoning 2 (1986) 191-216
-- http://www.sfu.ca/~jeffpell/papers/75ATPproblems86.pdf
-- ========================================================================

)lisp (snark::default-run-time-limit 5) 

X==>EXPR INT
P==>PROP INT

pcheck(problem,i) ==
  formula:P:=problem(1)
  premises:List P:=problem(2) 
  res:=prove(formula,premises)$P
  if  (string symbol(res)="PROOF-FOUND") then
    print (concat(string(i),":ok")::Symbol)
    true
  else
    print (concat(string(i),":ERROR")::Symbol)
    false
    
 
p:=pred('p,[])
q:=pred('q,[])
r:=pred('r,[])
s:=pred('s,[])

f(x:X):P == pred('f,[x])
g(x:X):P == pred('g,[x])
h(x:X):P == pred('h,[x])
i(x:X):P == pred('i,[x])
j(x:X):P == pred('j,[x])
k(x:X):P == pred('k,[x])
l(x:X):P == pred('l,[x])
m(x:X):P == pred('m,[x])

ff(x:X,y:X):P == pred('ff,[x,y])
gg(x:X,y:X):P == pred('gg,[x,y])
hh(x:X,y:X):P == pred('hh,[x,y])
pp(x:X,y:X):P == pred('pp,[x,y])


pelletier:= [ _
  [(p>>q)^(~q>>~p),[]], _
  [~~p^p,[]], _
  [~(p>>q)>>(q>>p),[]], _
  [(~p>>q)^(~q>>p),[]], _
  [((p\/q)>>(p\/r))>>(p\/(q>>r)),[]], _
  [p\/~p,[]], _
  [p\/~~~p,[]], _
  [((p>>q)>>p)>>p,[]], _
  [((p\/q)/\(~p\/q)/\(p\/~q))>>~(~p\/~q),[]], _
  [p^q,[q>>r,r>>(p/\q),p>>(q\/r)]], _
  [p^p,[]], _
  [((p^q)^r)^(p^(q^r)),[]], _
  [(p\/(q/\r))^((p\/q)/\(p\/r)),[]], _
  [(p^q)^((q\/~p)/\(~q\/p)),[]], _
  [(p>>q)^(~p\/q),[]], _
  [(p>>q)\/(q>>p),[]], _
  [((p/\(q>>r))>>s)^((~p\/q\/s)/\(~p\/~r\/s)),[]], _
  [ex(y,all(x,f(y)>>f(x))),[]], _
  [ex(x,all([y,z],((f(y)>>g(z))>>(f(x)>>g(x))))),[]], _
  [all([x,y],ex(z,all(w,((f(x)/\g(y))>>(h(z)/\k(w))>>((ex([x,y],(f(x)/\g(y))>>ex(z,h(z))))))))),[]], _
  [ex(x,p^f(x)),[ex(x,p>>f(x)),ex(x,f(x)>>p)]], _
  [all(x,p^f(x))>>(p^all(x,f(x))),[]], _
  [all(x,p\/f(x))>>(p\/all(x,f(x))),[]], _
  [ex(x,f(x)/\h(x)),[~ex(x,k(x)/\g(x)),all(x,f(x)>>(g(x)\/h(x))),~ex(x,f(x)>>ex(x,g(x))),all(x,g(x)\/h(x)>>k(x))]], _
  [ex(x,k(x)/\h(x)),[ex(x,h(x)),all(x,(f(x)>>(~g(x)/\l(x)))),all(x,(h(x)>>(g(x)/\f(x)))),all(x,(h(x)>>k(x))\/ex(x,(h(x)/\l(x))))]], _
  [all(x,(f(x)>>l(x)))^all(x,(g(x)>>m(x))),[ex(x,f(x))^ex(x,g(x)),all([x,y],(f(x)/\g(y))>>(l(x)^m(y)))]], _
  [all(x,j(x)>>~i(x)),[ex(x,f(x)/\~g(x)),all(x,f(x)>>h(x)),all(x,(j(x)/\i(x))>>f(x)),ex(x,(h(x)/\~g(x)))>>all(x,i(x)>>~h(x))]], _
  [all(x,(h(x)/\f(x))>>g(x)),[all(x,h(x))>>all(x,i(x)),all(x,(i(x)\/j(x)))>>ex(x,i(x)/\k(x)),ex(x,k(x))>>all(x,f(x)>>g(x))]], _
  [(all(x,(f(x)>>h(x)))/\all(x,(g(x)>>j(x))))^(all([x,y],(f(x)/\g(y))>>(h(x)/\j(y)))),[ex(x,f(x))/\ex(x,g(x))]], _
  [all(x,i(x)),[all(x,(f(x)\/g(x))>>~h(x)),all(x,(g(x)>>~i(x))>>(f(x)/\h(x)))]], _
  [ex(x,i(x)/\j(x)),[~(ex(x,f(x)/\(g(x)\/h(x)))),ex(x,i(x)/\f(x)),all(x,(~h(x)>>j(x)))]], _
  [all(x,(f(x)/\k(x))>>j(x)),[all(x,(f(x)/\(g(x)\/h(x)))>>i(x)),all(x,(i(x)/\h(x))>>j(x)),all(x,k(x)>>h(x))]], _
  [all(x,f(a)/\(f(x)>>f(b))>>f(c))^(all(x,(~f(a)\/(f(x)\/f(c))))/\(~f(a)\/(~f(b)\/f(c)))),[]], _
  [(ex(x,all(y,(f(x)^f(y))))^(ex(x,g(x))^all(y,f(y))))^(ex(x,all(y,(g(x)^g(y))))^(ex(x,f(x))^all(y,f(y)))),[]], _
  [ex([x,y] ,pp(x,y)>>all([x,y] ,pp(x,y))),[]], _
  [all(x,ex(y,hh(x,y))),[all(x,ex(y,ff(x,y))),all(x,ex(y,gg(x,y))),all([x,y],(ff(x,y)\/gg(x,y))>>all(z,(ff(y,z)\/gg(y,z)>>hh(x,z))))]]
  ]
  
)if any
  ["0+37",[]], _
  ["0+38",[]], _
  ["0+39",[]], _
  ["0+40",[]], _
  ["0+41",[]], _
  ["0+42",[]], _
  ["0+43",[]], _
  ["0+44",[]], _
  ["0+45",[]], _
  ["0+46",[]], _
  ["0+47",[]], _
  ["0+48",[]], _
  ["0+49",[]], _
  ["0+50",[]], _
  ["0+51",[]], _
  ["0+52",[]], _
  ["0+53",[]], _
  ["0+54",[]], _
  ["0+55",[]], _
  ["0+56",[]], _
  ["0+57",[]], _
  ["0+58",[]], _
  ["0+59",[]], _
  ["0+60",[]], _
  ["0+61",[]], _
  ["0+62",[]], _
  ["0+63",[]], _
  ["0+64",[]], _
  ["0+65",[]], _
  ["0+66",[]], _
  ["0+67",[]], _
  ["0+68",[]], _
  ["0+69",[]], _
  ["0+70",[]], _
  ["0+71",[]], _
  ["0+72",[]], _
  ["0+73",[]], _
  ["0+74",[]], _
  ["0+75",[]] _
]

)endif


[pcheck(pelletier(i),i) for i in 1..#pelletier]